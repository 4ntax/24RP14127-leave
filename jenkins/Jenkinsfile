pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'docker.io'
        DOCKER_CREDENTIALS = 'docker-hub-credentials'
        KUBE_CONFIG = 'kubernetes-config'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'npm run test'
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    // Build main API image
                    docker.build("${DOCKER_REGISTRY}/${env.DOCKER_USERNAME}/test-app:${env.BUILD_NUMBER}")
                    
                    // Build leave request service image
                    docker.build("${DOCKER_REGISTRY}/${env.DOCKER_USERNAME}/leave-request-service:${env.BUILD_NUMBER}", "-f Dockerfile.microservice .")
                }
            }
        }

        stage('Push Docker Images') {
            steps {
                script {
                    docker.withRegistry("https://${DOCKER_REGISTRY}", DOCKER_CREDENTIALS) {
                        // Push main API image
                        docker.image("${DOCKER_REGISTRY}/${env.DOCKER_USERNAME}/test-app:${env.BUILD_NUMBER}").push()
                        docker.image("${DOCKER_REGISTRY}/${env.DOCKER_USERNAME}/test-app:${env.BUILD_NUMBER}").push('latest')
                        
                        // Push leave request service image
                        docker.image("${DOCKER_REGISTRY}/${env.DOCKER_USERNAME}/leave-request-service:${env.BUILD_NUMBER}").push()
                        docker.image("${DOCKER_REGISTRY}/${env.DOCKER_USERNAME}/leave-request-service:${env.BUILD_NUMBER}").push('latest')
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withKubeConfig([credentialsId: KUBE_CONFIG]) {
                    sh '''
                        # Update deployment image tags
                        sed -i "s|\${DOCKER_USERNAME}/test-app:latest|\${DOCKER_USERNAME}/test-app:${BUILD_NUMBER}|g" k8s/backend-deployment.yaml
                        sed -i "s|\${DOCKER_USERNAME}/leave-request-service:latest|\${DOCKER_USERNAME}/leave-request-service:${BUILD_NUMBER}|g" k8s/microservice-deployment.yaml
                        
                        # Apply Kubernetes configurations
                        kubectl apply -f k8s/
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}